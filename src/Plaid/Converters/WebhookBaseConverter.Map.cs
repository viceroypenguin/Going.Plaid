using Going.Plaid.Webhook;

namespace Going.Plaid.Converters;

/// <inheritdoc />
public partial class WebhookBaseConverter : JsonConverter<WebhookBase>
{
	private static readonly Dictionary<(WebhookType, WebhookCode), Type> s_map =
		new()
		{
			[(WebhookType.Screening, WebhookCode.StatusUpdated)] = typeof(ScreeningStatusUpdatedWebhook),
			[(WebhookType.EntityScreening, WebhookCode.StatusUpdated)] = typeof(EntityScreeningStatusUpdatedWebhook),
			[(WebhookType.Beacon, WebhookCode.UserStatusUpdated)] = typeof(BeaconUserStatusUpdatedWebhook),
			[(WebhookType.Beacon, WebhookCode.ReportCreated)] = typeof(BeaconReportCreatedWebhook),
			[(WebhookType.Beacon, WebhookCode.ReportUpdated)] = typeof(BeaconReportUpdatedWebhook),
			[(WebhookType.Beacon, WebhookCode.ReportSyndicationCreated)] = typeof(BeaconReportSyndicationCreatedWebhook),
			[(WebhookType.Beacon, WebhookCode.DuplicateDetected)] = typeof(BeaconDuplicateDetectedWebhook),
			[(WebhookType.IdentityVerification, WebhookCode.StepUpdated)] = typeof(IdentityVerificationStepUpdatedWebhook),
			[(WebhookType.IdentityVerification, WebhookCode.Retried)] = typeof(IdentityVerificationRetriedWebhook),
			[(WebhookType.IdentityVerification, WebhookCode.StatusUpdated)] = typeof(IdentityVerificationStatusUpdatedWebhook),
			[(WebhookType.Transactions, WebhookCode.TransactionsRemoved)] = typeof(TransactionsRemovedWebhook),
			[(WebhookType.Transactions, WebhookCode.DefaultUpdate)] = typeof(DefaultUpdateWebhook),
			[(WebhookType.Transactions, WebhookCode.SyncUpdatesAvailable)] = typeof(SyncUpdatesAvailableWebhook),
			[(WebhookType.Transactions, WebhookCode.RecurringTransactionsUpdate)] = typeof(RecurringTransactionsUpdateWebhook),
			[(WebhookType.Identity, WebhookCode.DefaultUpdate)] = typeof(IdentityDefaultUpdateWebhook),
			[(WebhookType.Transactions, WebhookCode.HistoricalUpdate)] = typeof(HistoricalUpdateWebhook),
			[(WebhookType.Transactions, WebhookCode.InitialUpdate)] = typeof(InitialUpdateWebhook),
			[(WebhookType.Issues, WebhookCode.IssueResolved)] = typeof(IssueResolvedWebhook),
			[(WebhookType.Auth, WebhookCode.DefaultUpdate)] = typeof(AuthDefaultUpdateWebhook),
			[(WebhookType.Auth, WebhookCode.AutomaticallyVerified)] = typeof(FallbackAuthMicrodepositAutoVerifiedWebhook),
			[(WebhookType.Auth, WebhookCode.VerificationExpired)] = typeof(FallbackAuthMicrodepositVerificationExpiredWebhook),
			[(WebhookType.Item, WebhookCode.WebhookUpdateAcknowledged)] = typeof(WebhookUpdateAcknowledgedWebhook),
			[(WebhookType.Item, WebhookCode.PendingExpiration)] = typeof(PendingExpirationWebhook),
			[(WebhookType.Item, WebhookCode.Error)] = typeof(ItemErrorWebhook),
			[(WebhookType.Item, WebhookCode.LoginRepaired)] = typeof(ItemLoginRepairedWebhook),
			[(WebhookType.Income, WebhookCode.ProductReady)] = typeof(ItemProductReadyWebhook),
			[(WebhookType.Auth, WebhookCode.ProductPermissionsRequired)] = typeof(ProductPermissionsRequiredAuthWebhook),
			[(WebhookType.Identity, WebhookCode.ProductPermissionsRequired)] = typeof(ProductPermissionsRequiredIdentityWebhook),
			[(WebhookType.BankTransfers, WebhookCode.BankTransfersEventsUpdate)] = typeof(BankTransfersEventsUpdateWebhook),
			[(WebhookType.Transfer, WebhookCode.TransferEventsUpdate)] = typeof(TransferEventsUpdateWebhook),
			[(WebhookType.Layer, WebhookCode.LayerAuthenticationPassed)] = typeof(LayerAuthenticationPassedWebhook),
			[(WebhookType.Transfer, WebhookCode.RecurringNewTransfer)] = typeof(RecurringNewTransferWebhook),
			[(WebhookType.Transfer, WebhookCode.RecurringTransferSkipped)] = typeof(RecurringTransferSkippedWebhook),
			[(WebhookType.Transfer, WebhookCode.RecurringCancelled)] = typeof(RecurringCancelledWebhook),
			[(WebhookType.InvestmentsTransactions, WebhookCode.DefaultUpdate)] = typeof(InvestmentsDefaultUpdateWebhook),
			[(WebhookType.InvestmentsTransactions, WebhookCode.HistoricalUpdate)] = typeof(InvestmentsHistoricalUpdateWebhook),
			[(WebhookType.Holdings, WebhookCode.DefaultUpdate)] = typeof(HoldingsDefaultUpdateWebhook),
			[(WebhookType.Partner, WebhookCode.EndCustomerOauthStatusUpdated)] = typeof(PartnerEndCustomerOAuthStatusUpdatedWebhook),
			[(WebhookType.Liabilities, WebhookCode.DefaultUpdate)] = typeof(LiabilitiesDefaultUpdateWebhook),
			[(WebhookType.Item, WebhookCode.PendingDisconnect)] = typeof(PendingDisconnectWebhook),
			[(WebhookType.PaymentInitiation, WebhookCode.PaymentStatusUpdate)] = typeof(PaymentStatusUpdateWebhook),
			[(WebhookType.PaymentInitiation, WebhookCode.ConsentStatusUpdate)] = typeof(PaymentInitiationConsentStatusUpdateWebhook),
			[(WebhookType.Wallet, WebhookCode.WalletTransactionStatusUpdate)] = typeof(WalletTransactionStatusUpdateWebhook),
			[(WebhookType.Item, WebhookCode.UserPermissionRevoked)] = typeof(UserPermissionRevokedWebhook),
			[(WebhookType.Transfer, WebhookCode.PlatformOnboardingUpdate)] = typeof(TransferPlatformOnboardingUpdateWebhook),
			[(WebhookType.Income, WebhookCode.IncomeVerification)] = typeof(IncomeVerificationStatusWebhook),
			[(WebhookType.Income, WebhookCode.IncomeVerificationRiskSignals)] = typeof(IncomeVerificationRiskSignalsStatusWebhook),
			[(WebhookType.Item, WebhookCode.NewAccountsAvailable)] = typeof(NewAccountsAvailableWebhook),
			[(WebhookType.LinkDelivery, WebhookCode.DeliveryStatus)] = typeof(LinkUserDeliveryStatusWebhook),
			[(WebhookType.LinkDelivery, WebhookCode.LinkCallback)] = typeof(LinkDeliveryCallbackWebhook),
			[(WebhookType.Item, WebhookCode.UserAccountRevoked)] = typeof(UserAccountRevokedWebhook),
			[(WebhookType.Statements, WebhookCode.StatementsRefreshComplete)] = typeof(StatementsRefreshCompleteWebhook),
			[(WebhookType.CraMonitoring, WebhookCode.InsightsUpdated)] = typeof(MonitoringInsightsWebhook),
			[(WebhookType.CashFlowUpdates, WebhookCode.InsightsUpdated)] = typeof(CashFlowUpdatesInsightsWebhook),
			[(WebhookType.CashFlowUpdates, WebhookCode.NsfOverdraftDetected)] = typeof(CashFlowUpdatesNSFWebhook),
			[(WebhookType.CashFlowUpdates, WebhookCode.NewIncomeStreamDetected)] = typeof(CashFlowUpdatesNewIncomeStreamWebhook),
			[(WebhookType.CashFlowUpdates, WebhookCode.ExpectedDepositMissed)] = typeof(CashFlowUpdatesExpectedDepositMissedWebhook),
			[(WebhookType.CashFlowUpdates, WebhookCode.LowBalanceDetected)] = typeof(CashFlowUpdatesLowBalanceWebhook),
			[(WebhookType.CashFlowUpdates, WebhookCode.LargeDepositDetected)] = typeof(CashFlowUpdatesLargeDepositWebhook),
			[(WebhookType.CashFlowUpdates, WebhookCode.NewLoanPaymentDetected)] = typeof(CashFlowUpdatesNewLoanPaymentWebhook),
			[(WebhookType.BaseReport, WebhookCode.Error)] = typeof(BaseReportsErrorWebhook),
			[(WebhookType.CraIncome, WebhookCode.BankIncomeComplete)] = typeof(CraBankIncomeCompleteWebhook),
			[(WebhookType.CraIncome, WebhookCode.Error)] = typeof(CraBankIncomeErrorWebhook),
			[(WebhookType.Income, WebhookCode.BankIncomeComplete)] = typeof(BankIncomeCompleteWebhook),
			[(WebhookType.CheckReport, WebhookCode.CheckReportReady)] = typeof(CraCheckReportReadyWebhook),
			[(WebhookType.CheckReport, WebhookCode.CheckReportFailed)] = typeof(CraCheckReportFailedWebhook),
			[(WebhookType.CheckReport, WebhookCode.UpgradeFailed)] = typeof(CraUpgradeFailedWebhook),
			[(WebhookType.CraInsights, WebhookCode.PartnerInsightsComplete)] = typeof(CraPartnerInsightsCompleteWebhook),
			[(WebhookType.CraInsights, WebhookCode.PartnerInsightsError)] = typeof(CraPartnerInsightsErrorWebhook),
			[(WebhookType.Income, WebhookCode.IncomeVerificationRefreshReconnectNeeded)] = typeof(IncomeVerificationRefreshReconnectNeededWebhook),
			[(WebhookType.Income, WebhookCode.BankIncomeRefreshUpdate)] = typeof(BankIncomeRefreshUpdateWebhook),
			[(WebhookType.Income, WebhookCode.BankIncomeRefreshComplete)] = typeof(BankIncomeRefreshCompleteWebhook),
			[(WebhookType.Link, WebhookCode.Events)] = typeof(LinkEventsWebhook),
			[(WebhookType.Link, WebhookCode.ItemAddResult)] = typeof(ItemAddResultWebhook),
			[(WebhookType.Link, WebhookCode.SessionFinished)] = typeof(LinkSessionFinishedWebhook),
			[(WebhookType.Auth, WebhookCode.SmsMicrodepositsVerification)] = typeof(HostedMMDVerificationWebhook),
			[(WebhookType.DashboardConfiguredAlert, WebhookCode.InstitutionStatusAlertTriggered)] = typeof(InstitutionStatusAlertWebhook),
			[(WebhookType.Assets, WebhookCode.ProductReady)] = typeof(AssetsProductReadyWebhook),
			[(WebhookType.Assets, WebhookCode.Error)] = typeof(AssetsErrorWebhook),
		};
}
